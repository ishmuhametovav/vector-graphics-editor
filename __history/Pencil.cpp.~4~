#include<vector>
#include<utility>
#include"coordinate_system.h"
#include"Pencil.h"

pencil::pencil(double x1, double y1, double x2, double y2, int width, TColor pen_color) :
	points{ {x1, y1}, {x2, y2} }, shape(width, pen_color, clNone) {}

void pencil::draw(TCanvas* canvas, const coordinate_system* coord_system)
{
	apply_properties(canvas);

	for (unsigned int i = 1; i < points.size(); ++i)
	{
		int p_x1 = coord_system->to_pixelx(points[i - 1].first);
		int p_y1 = coord_system->to_pixely(points[i - 1].second);
		int p_x2 = coord_system->to_pixelx(points[i].first);
		int p_y2 = coord_system->to_pixely(points[i].second);

		canvas->MoveTo(p_x1, p_y1);
		canvas->LineTo(p_x2, p_y2);
	}
}

void pencil::translate(const double dx, const double dy)
{
	for(auto [u, v] : points)
	{
		u += dx; v += dy;
	}
}

void pencil::scale(const double x, const double y)
{

}

void pencil::update_on_drag(const double x, const double y)
{
	points.push_back({x, y});
}

void pencil::draw_selection_box(TCanvas* canvas)
{

}

bool pencil::is_clicked(const double x, const double y) const
{
	return false;
}
